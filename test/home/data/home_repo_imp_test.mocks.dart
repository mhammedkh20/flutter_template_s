// Mocks generated by Mockito 5.4.4 from annotations
// in template_flutter_project/test/home/data/home_repo_imp_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:template_flutter_project/core/network/api.dart' as _i4;
import 'package:template_flutter_project/core/services/dio_service.dart' as _i2;
import 'package:template_flutter_project/future/home/models/general_response.dart'
    as _i6;
import 'package:template_flutter_project/future/home/models/user_model.dart'
    as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDioService_0 extends _i1.SmartFake implements _i2.DioService {
  _FakeDioService_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Api].
///
/// See the documentation for Mockito's code generation for more information.
class MockApi extends _i1.Mock implements _i4.Api {
  @override
  _i2.DioService get dio => (super.noSuchMethod(
        Invocation.getter(#dio),
        returnValue: _FakeDioService_0(
          this,
          Invocation.getter(#dio),
        ),
        returnValueForMissingStub: _FakeDioService_0(
          this,
          Invocation.getter(#dio),
        ),
      ) as _i2.DioService);
  @override
  _i5.Future<_i3.Either<String, _i6.GeneralResponse<List<_i7.UserModel>>>>
      users() => (super.noSuchMethod(
            Invocation.method(
              #users,
              [],
            ),
            returnValue: _i5.Future<
                    _i3.Either<String,
                        _i6.GeneralResponse<List<_i7.UserModel>>>>.value(
                _FakeEither_1<String, _i6.GeneralResponse<List<_i7.UserModel>>>(
              this,
              Invocation.method(
                #users,
                [],
              ),
            )),
            returnValueForMissingStub: _i5.Future<
                    _i3.Either<String,
                        _i6.GeneralResponse<List<_i7.UserModel>>>>.value(
                _FakeEither_1<String, _i6.GeneralResponse<List<_i7.UserModel>>>(
              this,
              Invocation.method(
                #users,
                [],
              ),
            )),
          ) as _i5.Future<
              _i3.Either<String, _i6.GeneralResponse<List<_i7.UserModel>>>>);
}
